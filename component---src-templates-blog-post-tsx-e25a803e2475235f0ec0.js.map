{"version":3,"file":"component---src-templates-blog-post-tsx-e25a803e2475235f0ec0.js","mappings":"qHAkBA,IAAIA,EAAa,cAhBjB,SAAiBC,EAAOC,GACtB,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,qIAKP,O,sGC0EA,UAnFI,SAAC,GAAa,oCAAXC,EAAW,EAAXA,KACCC,EAAOD,EAAKE,eACZC,GAAYH,MAAAA,GAAA,UAAAA,EAAMI,YAAN,mBAAYC,oBAAZ,eAA0BC,QAA1B,WACVC,EAAmBP,EAAnBO,SAAUC,EAASR,EAATQ,KAEZC,EAAU,IAAH,UAAMT,EAAKI,YAAX,iBAAM,EAAWC,oBAAjB,aAAM,EAAyBK,UAAUT,MAAAA,GAAzC,UAAyCA,EAAMU,cAA/C,aAAyC,EAAcC,MAAvD,gBAEb,OACE,gBAAC,IAAD,CAAQN,MAAOH,GACb,gBAAC,IAAD,CACEG,OAAOL,MAAAA,GAAA,UAAAA,EAAMY,mBAAN,eAAmBP,QAAS,YACnCQ,aAAab,MAAAA,GAAA,UAAAA,EAAMY,mBAAN,eAAmBC,eAAeb,MAAAA,OAAlC,EAAkCA,EAAMc,SACrDN,QAASA,IAEX,2BACEO,UAAU,sBACVC,WAAS,EACTC,SAAS,6BAET,uBAAKF,UAAU,gCACb,8BACE,sBAAIA,UAAU,0BAA0BG,SAAS,YAC9ClB,MAAAA,GADH,UACGA,EAAMY,mBADT,aACG,EAAmBP,OAEtB,qBAAGU,UAAU,qBACX,gBAAC,IAAD,CAAWA,UAAU,kBACpBI,EAAAA,EAAAA,GAAO,IAAIC,MAAKpB,MAAAA,GAAA,UAAAA,EAAMY,mBAAN,eAAmBS,OAAQ,IAAK,gBAElDrB,MAAAA,GAAA,UAAAA,EAAMY,mBAAN,eAAmBU,OAClB,uBAAKP,UAAU,qBACb,gBAAC,IAAD,CAASA,UAAU,iBAClBf,MAAAA,GAFH,UAEGA,EAAMY,mBAFT,iBAEG,EAAmBU,YAFtB,aAEG,EAAyBC,KAAI,SAAAC,GAC5B,OACE,qBAAGC,IAAKD,EAAKT,UAAU,QACpBS,QAOb,uBAAKT,UAAU,QACb,uBAAKA,UAAU,qCAEjB,2BACEA,UAAU,iBACVW,wBAAyB,CAAEC,QAAQ3B,MAAAA,OAAA,EAAAA,EAAM4B,OAAQ,IACjDV,SAAS,kBAIf,uBAAKH,UAAU,uBACb,uBAAKA,UAAU,gCACb,sBACEc,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,0BACG5B,GACC,gBAAC,EAAA6B,KAAD,CAAMC,IAAI9B,MAAAA,GAAA,UAAAA,EAAUI,cAAV,eAAkBC,OAAQ,IAAK0B,IAAI,QAA7C,KACK/B,MAAAA,GADL,UACKA,EAAUM,mBADf,aACK,EAAuBP,QAIhC,0BACGE,GACC,gBAAC,EAAA4B,KAAD,CAAMC,IAAI7B,MAAAA,GAAA,UAAAA,EAAMG,cAAN,eAAcC,OAAQ,IAAK0B,IAAI,QACtC9B,MAAAA,GADH,UACGA,EAAMK,mBADT,aACG,EAAmBP,MADtB","sources":["webpack://narusite/./node_modules/@heroicons/react/outline/esm/TagIcon.js","webpack://narusite/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction TagIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(TagIcon);\nexport default ForwardRef;","import * as React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\nimport { ClockIcon, TagIcon } from '@heroicons/react/outline';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { format } from 'date-fns';\n\nconst BlogPostTemplate: React.FC<\n  PageProps<GatsbyTypes.BlogPostBySlugQuery>\n> = ({ data }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data?.site?.siteMetadata?.title || `Narusite`;\n  const { previous, next } = data;\n\n  const ogImage = `${data.site?.siteMetadata?.siteUrl}${post?.fields?.slug}thumbnail.png`;\n\n  return (\n    <Layout title={siteTitle}>\n      <Seo\n        title={post?.frontmatter?.title || 'blog post'}\n        description={post?.frontmatter?.description || post?.excerpt}\n        ogImage={ogImage}\n      />\n      <article\n        className=\"flex justify-center\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <div className=\"p-4 w-full md:w-4/5 lg:w-4/6\">\n          <header>\n            <h1 className=\"text-5xl py-4 font-bold\" itemProp=\"headline\">\n              {post?.frontmatter?.title}\n            </h1>\n            <p className=\"flex items-center\">\n              <ClockIcon className=\"h-5 w-5 mr-1\"></ClockIcon>\n              {format(new Date(post?.frontmatter?.date || ''), 'yyyy-MM-dd')}\n            </p>\n            {post?.frontmatter?.tags && (\n              <div className=\"flex items-center\">\n                <TagIcon className=\"h-5 w-5 mr-1\"></TagIcon>\n                {post?.frontmatter?.tags?.map(tag => {\n                  return (\n                    <p key={tag} className=\"mr-1\">\n                      {tag}\n                    </p>\n                  );\n                })}\n              </div>\n            )}\n          </header>\n          <div className=\"py-6\">\n            <div className=\"w-full border-t border-gray-300\"></div>\n          </div>\n          <section\n            className=\"markdown-style\"\n            dangerouslySetInnerHTML={{ __html: post?.html || '' }}\n            itemProp=\"articleBody\"\n          />\n        </div>\n      </article>\n      <nav className=\"flex justify-center\">\n        <div className=\"p-4 w-full md:w-4/5 lg:w-4/6\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous?.fields?.slug || '/'} rel=\"prev\">\n                  ← {previous?.frontmatter?.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next?.fields?.slug || '/'} rel=\"next\">\n                  {next?.frontmatter?.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["ForwardRef","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","data","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","ogImage","siteUrl","fields","slug","frontmatter","description","excerpt","className","itemScope","itemType","itemProp","format","Date","date","tags","map","tag","key","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","rel"],"sourceRoot":""}