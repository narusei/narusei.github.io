{"version":3,"file":"component---src-pages-blog-tsx-1a066b223eb6d2737f27.js","mappings":"uHAkBA,IAAIA,EAAa,cAhBjB,SAAiBC,EAAOC,GACtB,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqB,gBAAoB,OAAQ,CAClDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,qIAKP,O,sGCoEA,UA/EiE,SAAC,GAAa,QAAXC,EAAW,EAAXA,KAC5DC,GAAY,UAAAD,EAAKE,YAAL,mBAAWC,oBAAX,eAAyBC,QAAzB,WACZC,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQJ,MAAOH,GACb,gBAAC,IAAD,CAAKG,MAAM,cACX,mLAUJ,gBAAC,IAAD,CAAQA,MAAOH,GACb,gBAAC,IAAD,CAAKG,MAAM,cACX,sBAAIK,UAAU,wCACXJ,EAAMK,KAAI,SAAAC,GAAQ,sBACXP,GAAQ,UAAAO,EAAKC,mBAAL,eAAkBR,SAAlB,UAA2BO,EAAKE,cAAhC,aAA2B,EAAaC,MAEtD,OACE,sBACEC,IAAG,UAAEJ,EAAKE,cAAP,aAAE,EAAaC,KAClBL,UAAU,gCAEV,2BAASO,WAAS,EAACC,SAAS,6BAC1B,gBAAC,EAAAC,KAAD,CAAMC,IAAI,UAAAR,EAAKE,cAAL,eAAaC,OAAQ,IAAKM,SAAS,OAC3C,uBAAKX,UAAU,0EACb,8BACE,sBAAIA,UAAU,iEACXL,IAGL,+BACE,qBACEK,UAAU,uBACVY,wBAAyB,CACvBC,QACE,UAAAX,EAAKC,mBAAL,eAAkBW,cAAeZ,EAAKa,SAAW,IAErDJ,SAAS,iBAGb,0BAAQX,UAAU,iBACf,UAAAE,EAAKC,mBAAL,eAAkBa,OACjB,uBAAKhB,UAAU,qBACb,gBAAC,IAAD,CAASA,UAAU,iBAClBE,MAAAA,GAFH,UAEGA,EAAMC,mBAFT,iBAEG,EAAmBa,YAFtB,aAEG,EAAyBf,KAAI,SAAAgB,GAC5B,OACE,qBAAGX,IAAKW,EAAKjB,UAAU,QACpBiB,OAMX,qBAAGjB,UAAU,6BACX,gBAAC,IAAD,CAAWA,UAAU,kBACpBkB,EAAAA,EAAAA,GACC,IAAIC,MAAKjB,MAAAA,GAAA,UAAAA,EAAMC,mBAAN,eAAmBiB,OAAQ,IACpC","sources":["webpack://narusite/./node_modules/@heroicons/react/outline/esm/TagIcon.js","webpack://narusite/./src/pages/blog.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction TagIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(TagIcon);\nexport default ForwardRef;","import * as React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport { format } from 'date-fns';\nimport { ClockIcon, TagIcon } from '@heroicons/react/outline';\n\nconst BlogPage: React.FC<PageProps<GatsbyTypes.BlogPageQuery>> = ({ data }) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Narusite`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout title={siteTitle}>\n        <Seo title=\"Blog List\" />\n        <p>\n          No blog posts found. Add markdown posts to content/blog (or the\n          directory you specified for the gatsby-source-filesystem plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout title={siteTitle}>\n      <Seo title=\"Blog List\" />\n      <ol className=\"list-none flex flex-col items-center\">\n        {posts.map(post => {\n          const title = post.frontmatter?.title || post.fields?.slug;\n\n          return (\n            <li\n              key={post.fields?.slug}\n              className=\"p-4 w-full md:w-4/5 lg:w-4/6\"\n            >\n              <article itemScope itemType=\"http://schema.org/Article\">\n                <Link to={post.fields?.slug || '/'} itemProp=\"url\">\n                  <div className=\"h-full bg-gray-100 bg-opacity-75 px-8 py-16 rounded-lg overflow-hidden\">\n                    <header>\n                      <h1 className=\"title-font sm:text-2xl text-xl font-medium text-gray-900 mb-3\">\n                        {title}\n                      </h1>\n                    </header>\n                    <section>\n                      <p\n                        className=\"leading-relaxed mb-3\"\n                        dangerouslySetInnerHTML={{\n                          __html:\n                            post.frontmatter?.description || post.excerpt || '',\n                        }}\n                        itemProp=\"description\"\n                      ></p>\n                    </section>\n                    <footer className=\"text-sm flex\">\n                      {post.frontmatter?.tags && (\n                        <div className=\"flex items-center\">\n                          <TagIcon className=\"h-5 w-5 mr-1\"></TagIcon>\n                          {post?.frontmatter?.tags?.map(tag => {\n                            return (\n                              <p key={tag} className=\"mr-1\">\n                                {tag}\n                              </p>\n                            );\n                          })}\n                        </div>\n                      )}\n                      <p className=\"flex items-center ml-auto\">\n                        <ClockIcon className=\"h-5 w-5 mr-1\"></ClockIcon>\n                        {format(\n                          new Date(post?.frontmatter?.date || ''),\n                          'yyyy-MM-dd'\n                        )}\n                      </p>\n                    </footer>\n                  </div>\n                </Link>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const pageQuery = graphql`\n  query BlogPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { contentType: { eq: \"blog\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`;\n"],"names":["ForwardRef","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","dangerouslySetInnerHTML","__html","description","excerpt","tags","tag","format","Date","date"],"sourceRoot":""}