{"version":3,"file":"component---src-pages-work-tsx-8eb76d6b7c84468aff34.js","mappings":"qKAyEA,UAlEiE,SAAC,GAAa,QAAXA,EAAW,EAAXA,KAC5DC,GAAY,UAAAD,EAAKE,YAAL,mBAAWC,oBAAX,eAAyBC,QAAzB,WACZC,EAAQL,EAAKM,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQJ,MAAOH,GACb,gBAAC,IAAD,CAAKG,MAAM,cACX,mLAUJ,gBAAC,IAAD,CAAQA,MAAOH,GACb,gBAAC,IAAD,CAAKG,MAAM,cACX,sBAAIK,UAAU,qEACXJ,EAAMK,KAAI,SAAAC,GAAQ,sBACXP,GAAQ,UAAAO,EAAKC,mBAAL,eAAkBR,SAAlB,UAA2BO,EAAKE,cAAhC,aAA2B,EAAaC,MAChDC,EACJ,UAAAJ,EAAKC,mBAAL,SAAkBG,WAAlB,UACAJ,EAAKC,YAAYG,UAAUC,uBAD3B,OACA,EAA4CC,iBACxCC,EAAAA,EAAAA,GACEP,EAAKC,YAAYG,UAAUC,gBAAgBC,sBAE7CE,EAEN,OACE,sBAAIC,IAAG,UAAET,EAAKE,cAAP,aAAE,EAAaC,KAAML,UAAU,OACpC,2BAASY,WAAS,EAACC,SAAS,6BAC1B,gBAAC,EAAAC,KAAD,CAAMC,IAAI,UAAAb,EAAKE,cAAL,eAAaC,OAAQ,IAAKW,SAAS,OAC1CV,GAAS,UAAIJ,EAAKC,mBAAT,OAAI,EAAkBc,aAC9B,gBAAC,EAAAC,EAAD,CACEC,MAAOb,EACPc,IAAG,UAAElB,EAAKC,mBAAP,aAAE,EAAkBc,eAGzB,gBAAC,EAAAI,EAAD,CACEC,IAAI,kCACJF,IAAI,iBAFN,qBAKF,uBAAKpB,UAAU,gFACb,8BACE,sBAAIA,UAAU,4DACXL,IAGL,0BAAQK,UAAU,WAChB,uCAAQE,EAAKC,mBAAb,aAAQ,EAAkBoB,kB","sources":["webpack://narusite/./src/pages/work.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\nimport { GatsbyImage, getImage, StaticImage } from 'gatsby-plugin-image';\n\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\n\nconst WorkPage: React.FC<PageProps<GatsbyTypes.WorkPageQuery>> = ({ data }) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Narusite`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout title={siteTitle}>\n        <Seo title=\"Work List\" />\n        <p>\n          No work posts found. Add markdown posts to content/blog (or the\n          directory you specified for the gatsby-source-filesystem plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout title={siteTitle}>\n      <Seo title=\"Work List\" />\n      <ol className=\"list-none grid grid-cols-1 md:grid-cols-2 md:px-32 lg:grid-cols-3\">\n        {posts.map(post => {\n          const title = post.frontmatter?.title || post.fields?.slug;\n          const thumbnail =\n            post.frontmatter?.thumbnail &&\n            post.frontmatter.thumbnail.childImageSharp?.gatsbyImageData\n              ? getImage(\n                  post.frontmatter.thumbnail.childImageSharp.gatsbyImageData\n                )\n              : undefined;\n\n          return (\n            <li key={post.fields?.slug} className=\"p-4\">\n              <article itemScope itemType=\"http://schema.org/Article\">\n                <Link to={post.fields?.slug || '/'} itemProp=\"url\">\n                  {thumbnail && post.frontmatter?.thumbnailAlt ? (\n                    <GatsbyImage\n                      image={thumbnail}\n                      alt={post.frontmatter?.thumbnailAlt}\n                    ></GatsbyImage>\n                  ) : (\n                    <StaticImage\n                      src=\"../images/thumbnail_default.png\"\n                      alt=\"制作物のデフォルトサムネ画像\"\n                    ></StaticImage>\n                  )}\n                  <div className=\"bg-gray-100 bg-opacity-75 overflow-hidden p-2 rounded-b-lg flex items-center\">\n                    <header>\n                      <h1 className=\"title-font sm:text-2xl text-xl font-medium text-gray-900\">\n                        {title}\n                      </h1>\n                    </header>\n                    <footer className=\"ml-auto\">\n                      <small>{post.frontmatter?.date}</small>\n                    </footer>\n                  </div>\n                </Link>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default WorkPage;\n\nexport const pageQuery = graphql`\n  query WorkPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { contentType: { eq: \"work\" } } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n          thumbnailAlt\n        }\n      }\n    }\n  }\n`;\n"],"names":["data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","map","post","frontmatter","fields","slug","thumbnail","childImageSharp","gatsbyImageData","getImage","undefined","key","itemScope","itemType","Link","to","itemProp","thumbnailAlt","G","image","alt","S","src","date"],"sourceRoot":""}